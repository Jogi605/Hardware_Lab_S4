


;;FOUND@POSITION;;;

section .text
 
startnew:
 
mov ecx,newline
mov edx,1
mov eax,4
mov ebx,1
int 0x80
ret
 
convert:
mov ecx,[inp]
mov bl,10
mov al,cl
sub al,30h
mul bl
sub ch,30h
add al,ch
mov byte[inp],al
ret
 
takeinput:
mov ecx,msgele
mov edx,lmsgele
mov eax,4
mov ebx,1
int 0x80
 
mov ecx,inp
mov edx,2
mov eax,3
mov ebx,0
int 0x80
 
mov ecx,temp
mov edx,1
mov eax,3
mov ebx,0
int 0x80
 
call convert
 
ret
 
global _start
_start:
 
mov ecx,msgno
mov edx,lmsgno
mov eax,4
mov ebx,1
int 0x80
 
mov ecx,inp
mov edx,2
mov eax,3
mov ebx,0
int 0x80
 
mov ecx,temp
mov edx,1
mov eax,3
mov ebx,0
int 0x80
 
call convert
mov cl,[inp]
mov byte[n],cl
 
mov ecx,0
mov cl,[n]
mov ebp,0
mov edx,0
take:
push dx
call takeinput
mov edx,0
pop dx
mov al,byte[inp]
mov byte[input+edx],al
add edx,1
mov ecx,0
mov cl,[n]
add ebp,1
cmp ebp,ecx
jne take
 
mov ecx,msgsrc
mov edx,lmsgsrc
mov eax,4
mov ebx,1
int 0x80
 
mov ecx,inp
mov edx,2
mov eax,3
mov ebx,0
int 0x80
 
mov ecx,temp
mov edx,1
mov eax,3
mov ebx,0
int 0x80
 
call convert
mov eax,0
mov al,[inp]
mov byte[element],al
 
mov edx,0
mov dl,byte[n]
mov al,byte[element]
search:
mov cl,byte[input+edx]
cmp cl,al
je foundit
sub edx,1
 
cmp dl,-1
jne search
 
call startnew
 
push 29h
mov ebx,0
mov bl,byte[element]
mov ax,bx
mov ebx,0
mov bl,10
breaks1:
mov edx,0
div bx
add dl,30h
push dx
cmp al,0
jne breaks1
mov edx,0
pop dx
 
print1:
 
mov byte[printdata],dl
 
mov ecx,printdata
mov edx,1
mov eax,4
mov ebx,1
int 0x80
 
mov edx,0
pop dx
cmp dl,29h
jne print1
 
mov ecx,notfound
mov edx,lnot
mov eax,4
mov ebx,1
int 0x80
 
call startnew
 
jmp ext
 
foundit:
mov byte[pos],dl
add byte[pos],1
 
call startnew
 
push 29h
mov ebx,0
mov bl,byte[element]
mov ax,bx
mov ebx,0
mov bl,10
breaks:
mov edx,0
div bx
add dl,30h
push dx
cmp al,0
jne breaks
mov edx,0
pop dx
 
print:
 
mov byte[printdata],dl
 
mov ecx,printdata
mov edx,1
mov eax,4
mov ebx,1
int 0x80
 
mov edx,0
pop dx
cmp dl,29h
jne print
 
mov ecx,found
mov edx,lfo
mov eax,4
mov ebx,1
int 0x80
 
 
push 29h
mov ebx,0
mov bl,byte[pos]
mov ax,bx
mov ebx,0
mov bl,10
break:
mov edx,0
div bx
add dl,30h
push dx
cmp al,0
jne break
 
mov edx,0
pop dx
 
prints:
 
mov byte[printdata],dl
 
mov ecx,printdata
mov edx,1
mov eax,4
mov ebx,1
int 0x80
 
mov edx,0
pop dx
cmp dl,29h
jne prints
 
 
call startnew
 
ext:
mov eax,1
mov ebx,0
int 0x80
 
section .bss
input resb 100
 
section .data
msgno db "ENTER NO:OF ELEMENTS",10
lmsgno equ $-msgno
msgele db "ENTER THE ELEMENT",10
lmsgele equ $-msgele
msgsrc db "ENTER THE ELEMENT TO BE SEARCHED",10
lmsgsrc equ $-msgsrc
inp dw 30h
notfound db " NOT FOUND IN THE ENTERED LIST",10
lnot equ $-notfound
found db " FOUND @ POSITION ",32
lfo equ $-found
element db 30h
n db 30h
temp db 30h
printdata db 30h
newline db 10
pos db 30h
